--- cisco.go.orig	2022-06-16 18:40:26.594609796 +0000
+++ cisco.go.xrd2	2022-06-16 22:31:09.886994327 +0000
@@ -63,7 +63,7 @@
 	secContext := &corev1.SecurityContext{
 		Privileged: pointer.Bool(true),
 	}
-	if pb.Model == "xrd" {
+	if (pb.Model == "xrd" || pb.Model == "xrd2"){
 		secContext = &corev1.SecurityContext{
 			Privileged: pointer.Bool(true),
 			RunAsUser:  pointer.Int64(0),
@@ -250,8 +250,10 @@
 }
 
 func generateInterfacesEnvs(pb *tpb.Node) (interfaceList, interfaceMap string, err error) {
-	interfaceList = "MgmtEther0/RP0/CPU0/0"
-	interfaceMap = "MgmtEther0/RP0/CPU0/0:eth0"
+	if pb.Model == "xrd" {
+		interfaceList = "MgmtEther0/RP0/CPU0/0"
+	    interfaceMap = "MgmtEther0/RP0/CPU0/0:eth0"
+	}
 	eths := make([]string, 0)
 	for k := range pb.Interfaces {
 		eths = append(eths, k)
@@ -261,7 +263,12 @@
 		ciscoInterfaceId, err := getCiscoInterfaceId(pb, eth)
 		if err == nil {
 			interfaceList = fmt.Sprintf("%s,%s", interfaceList, ciscoInterfaceId)
-			interfaceMap = fmt.Sprintf("%s,%s:%s", interfaceMap, ciscoInterfaceId, eth)
+			if pb.Model == "xrd2" {
+				interfaceMap = fmt.Sprintf("%s;linux:%s", interfaceMap, eth)
+			    log.Infof("interface id: %s", ciscoInterfaceId)
+			} else {
+				interfaceMap = fmt.Sprintf("%s,%s:%s", interfaceMap, ciscoInterfaceId, eth)
+			}
 		} else {
 			return interfaceList, interfaceMap, err
 		}
@@ -320,10 +327,17 @@
 		return nil, err
 	}
 	if pb.Config.Env == nil {
-		pb.Config.Env = map[string]string{
-			"XR_INTERFACES":                  interfaceMap,
-			"XR_CHECKSUM_OFFLOAD_COUNTERACT": interfaceList,
-			"XR_EVERY_BOOT_CONFIG":           filepath.Join(pb.Config.ConfigPath, pb.Config.ConfigFile),
+		if pb.Model == "xrd" {
+			pb.Config.Env = map[string]string{
+				"XR_INTERFACES":                  interfaceMap,
+				"XR_CHECKSUM_OFFLOAD_COUNTERACT": interfaceList,
+				"XR_EVERY_BOOT_CONFIG":           filepath.Join(pb.Config.ConfigPath, pb.Config.ConfigFile),
+			}
+		} else if pb.Model == "xrd2" {
+			pb.Config.Env = map[string]string{
+				"XR_INTERFACES":                  interfaceMap,
+				"XR_EVERY_BOOT_CONFIG":           filepath.Join(pb.Config.ConfigPath, pb.Config.ConfigFile),
+			}
 		}
 	} else {
 		if pb.Config.Env["XR_INTERFACES"] == "" {
@@ -341,6 +355,11 @@
 		// This enables autmatic bringup of the managment interface for xrd
 		pb.Config.Env["XR_SNOOP_IP_INTERFACES"] = "MgmtEther0/RP0/CPU0/0"
 	}
+	if pb.Model == "xrd2" {
+		// no more XR_SNOOP_IP_INTERFACES 
+		// This enables autmatic bringup of the managment interface for xrd
+		pb.Config.Env["XR_MGMT_INTERFACES"] = "linux:eth0,snoop_v4,snoop_v4_default_route,chksum"
+	}
 	return pb, nil
 }
 
